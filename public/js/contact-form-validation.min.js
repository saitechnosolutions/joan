$(document).ready(function($) {

    'use strict';

    $('#contact-form').validate({
        rules: {
            name: {
                required: true,
                minlength: 3,
                maxlength: 30,
                // Custom rule to disallow special characters
                customName: true
            },
            mobile: {
                required: true,
                digits: true, // Ensures only digits are allowed
                // Custom rule to disallow alphabets
                customNumeric: true
            },
            message: {
                minlength: 3,
                maxlength: 60
            }
        },
        messages: {
            name: {
                required: "Please enter your name.",
                minlength: "Your name must be at least 3 characters long.",
                maxlength: "Your name cannot exceed 30 characters.",
                customName: "Please enter a valid name without special characters."
            },
            mobile: {
                customNumeric: "Please enter only numbers."
            },
            message: {
                minlength: "Your message must be at least 3 characters long.",
                maxlength: "Your message cannot exceed 60 characters."
            }
        },
        submitHandler: function(form) {
            var $form = $(form),
                $messageSuccess = $('#contactSuccess'),
                $messageError = $('#contactError'),
                $submitButton = $(this.submitButton);

            $submitButton.button('loading');

            // Ajax Submit
            $.ajax({
                type: 'POST',
                url: $form.attr('action'),
                data: $('#contact-form').serialize(),
                dataType: 'json',
                complete: function(data) {
                    if (typeof data.responseJSON === 'object') {
                        if (data.responseJSON.response == 'success') {
                            $messageSuccess.removeClass('hidden');
                            $messageError.addClass('hidden');
                            $form.find('.controled')
                                .val('')
                                .blur()
                                .parent()
                                .removeClass('has-success')
                                .removeClass('has-error')
                                .find('label.error')
                                .remove();
                            if (($messageSuccess.offset().top - 80) < $(window).scrollTop()) {
                                $('html, body').animate({
                                    scrollTop: $messageSuccess.offset().top - 80
                                }, 300);
                            }
                            $submitButton.button('reset');
                            $('.controled').keyup(function() {
                                $messageSuccess.addClass('hidden');
                            });
                            return;
                        }
                    }

                    $messageError.removeClass('hidden');
                    $messageSuccess.addClass('hidden');
                    $form.find('.controled')
                        .val('')
                        .blur()
                        .parent()
                        .removeClass('has-success')
                        .removeClass('has-error')
                        .find('label.error')
                        .remove();

                    if (($messageError.offset().top - 80) < $(window).scrollTop()) {
                        $('html, body').animate({
                            scrollTop: $messageError.offset().top - 80
                        }, 300);
                    }

                    $form.find('.has-success').removeClass('has-success');

                    $submitButton.button('reset');

                    $('.controled').keyup(function() {
                        $messageError.addClass('hidden');
                    });
                }
            });
        }
    });

    // Custom method to check for numeric input
    $.validator.addMethod("customNumeric", function(value, element) {
        return this.optional(element) || /^[0-9]+$/.test(value);
    }, "Please enter only numbers.");

    // Custom method to check for special characters in name
    $.validator.addMethod("customName", function(value, element) {
        return this.optional(element) || /^[a-zA-Z0-9 ]*$/.test(value);
    }, "Please enter a valid name without special characters.");
});